ARM GAS  /tmp/ccHGsyJi.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"cyfitter_cfg.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CYMEMZERO,"ax",%progbits
  18              		.align	2
  19              		.code	16
  20              		.thumb_func
  21              		.type	CYMEMZERO, %function
  22              	CYMEMZERO:
  23              	.LFB0:
  24              		.file 1 "cyfitter_cfg.c"
   1:cyfitter_cfg.c **** /*******************************************************************************
   2:cyfitter_cfg.c **** * FILENAME: cyfitter_cfg.c
   3:cyfitter_cfg.c **** * 
   4:cyfitter_cfg.c **** * PSoC Creator  3.2
   5:cyfitter_cfg.c **** *
   6:cyfitter_cfg.c **** * DESCRIPTION:
   7:cyfitter_cfg.c **** * This file contains device initialization code.
   8:cyfitter_cfg.c **** * Except for the user defined sections in CyClockStartupError(), this file should not be modified.
   9:cyfitter_cfg.c **** * This file is automatically generated by PSoC Creator.
  10:cyfitter_cfg.c **** *
  11:cyfitter_cfg.c **** ********************************************************************************
  12:cyfitter_cfg.c **** * Copyright (c) 2007-2015 Cypress Semiconductor.  All rights reserved.
  13:cyfitter_cfg.c **** * You may use this file only in accordance with the license, terms, conditions, 
  14:cyfitter_cfg.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  15:cyfitter_cfg.c **** * the software package with which this file was provided.
  16:cyfitter_cfg.c **** ********************************************************************************/
  17:cyfitter_cfg.c **** 
  18:cyfitter_cfg.c **** #include <string.h>
  19:cyfitter_cfg.c **** #include "cytypes.h"
  20:cyfitter_cfg.c **** #include "cydevice_trm.h"
  21:cyfitter_cfg.c **** #include "cyfitter.h"
  22:cyfitter_cfg.c **** #include "CyLib.h"
  23:cyfitter_cfg.c **** #include "cyfitter_cfg.h"
  24:cyfitter_cfg.c **** 
  25:cyfitter_cfg.c **** 
  26:cyfitter_cfg.c **** #if defined(__GNUC__) || defined(__ARMCC_VERSION)
  27:cyfitter_cfg.c ****     #define CYPACKED 
  28:cyfitter_cfg.c ****     #define CYPACKED_ATTR __attribute__ ((packed))
  29:cyfitter_cfg.c ****     #define CYALIGNED __attribute__ ((aligned))
  30:cyfitter_cfg.c ****     #define CY_CFG_UNUSED __attribute__ ((unused))
  31:cyfitter_cfg.c ****     #define CY_CFG_SECTION __attribute__ ((section(".psocinit")))
  32:cyfitter_cfg.c ****     
  33:cyfitter_cfg.c ****     #if defined(__ARMCC_VERSION)
ARM GAS  /tmp/ccHGsyJi.s 			page 2


  34:cyfitter_cfg.c ****         #define CY_CFG_MEMORY_BARRIER() __memory_changed()
  35:cyfitter_cfg.c ****     #else
  36:cyfitter_cfg.c ****         #define CY_CFG_MEMORY_BARRIER() __sync_synchronize()
  37:cyfitter_cfg.c ****     #endif
  38:cyfitter_cfg.c ****     
  39:cyfitter_cfg.c **** #elif defined(__ICCARM__)
  40:cyfitter_cfg.c ****     #include <intrinsics.h>
  41:cyfitter_cfg.c **** 
  42:cyfitter_cfg.c ****     #define CYPACKED __packed
  43:cyfitter_cfg.c ****     #define CYPACKED_ATTR 
  44:cyfitter_cfg.c ****     #define CYALIGNED _Pragma("data_alignment=4")
  45:cyfitter_cfg.c ****     #define CY_CFG_UNUSED _Pragma("diag_suppress=Pe177")
  46:cyfitter_cfg.c ****     #define CY_CFG_SECTION _Pragma("location=\".psocinit\"")
  47:cyfitter_cfg.c ****     
  48:cyfitter_cfg.c ****     #define CY_CFG_MEMORY_BARRIER() __DMB()
  49:cyfitter_cfg.c ****     
  50:cyfitter_cfg.c **** #else
  51:cyfitter_cfg.c ****     #error Unsupported toolchain
  52:cyfitter_cfg.c **** #endif
  53:cyfitter_cfg.c **** 
  54:cyfitter_cfg.c **** 
  55:cyfitter_cfg.c **** CY_CFG_UNUSED
  56:cyfitter_cfg.c **** static void CYMEMZERO(void *s, size_t n);
  57:cyfitter_cfg.c **** CY_CFG_UNUSED
  58:cyfitter_cfg.c **** static void CYMEMZERO(void *s, size_t n)
  59:cyfitter_cfg.c **** {
  25              		.loc 1 59 0
  26              		.cfi_startproc
  27 0000 80B5     		push	{r7, lr}
  28              		.cfi_def_cfa_offset 8
  29              		.cfi_offset 7, -8
  30              		.cfi_offset 14, -4
  31 0002 82B0     		sub	sp, sp, #8
  32              		.cfi_def_cfa_offset 16
  33 0004 00AF     		add	r7, sp, #0
  34              		.cfi_def_cfa_register 7
  35 0006 7860     		str	r0, [r7, #4]
  36 0008 3960     		str	r1, [r7]
  60:cyfitter_cfg.c **** 	(void)memset(s, 0, n);
  37              		.loc 1 60 0
  38 000a 7A68     		ldr	r2, [r7, #4]
  39 000c 3B68     		ldr	r3, [r7]
  40 000e 101C     		mov	r0, r2
  41 0010 0021     		mov	r1, #0
  42 0012 1A1C     		mov	r2, r3
  43 0014 FFF7FEFF 		bl	memset
  61:cyfitter_cfg.c **** }
  44              		.loc 1 61 0
  45 0018 BD46     		mov	sp, r7
  46 001a 02B0     		add	sp, sp, #8
  47              		@ sp needed
  48 001c 80BD     		pop	{r7, pc}
  49              		.cfi_endproc
  50              	.LFE0:
  51              		.size	CYMEMZERO, .-CYMEMZERO
  52 001e C046     		.section	.text.CYCONFIGCPY,"ax",%progbits
  53              		.align	2
ARM GAS  /tmp/ccHGsyJi.s 			page 3


  54              		.code	16
  55              		.thumb_func
  56              		.type	CYCONFIGCPY, %function
  57              	CYCONFIGCPY:
  58              	.LFB1:
  62:cyfitter_cfg.c **** CY_CFG_UNUSED
  63:cyfitter_cfg.c **** static void CYCONFIGCPY(void *dest, const void *src, size_t n);
  64:cyfitter_cfg.c **** CY_CFG_UNUSED
  65:cyfitter_cfg.c **** static void CYCONFIGCPY(void *dest, const void *src, size_t n)
  66:cyfitter_cfg.c **** {
  59              		.loc 1 66 0
  60              		.cfi_startproc
  61 0000 80B5     		push	{r7, lr}
  62              		.cfi_def_cfa_offset 8
  63              		.cfi_offset 7, -8
  64              		.cfi_offset 14, -4
  65 0002 84B0     		sub	sp, sp, #16
  66              		.cfi_def_cfa_offset 24
  67 0004 00AF     		add	r7, sp, #0
  68              		.cfi_def_cfa_register 7
  69 0006 F860     		str	r0, [r7, #12]
  70 0008 B960     		str	r1, [r7, #8]
  71 000a 7A60     		str	r2, [r7, #4]
  67:cyfitter_cfg.c **** 	(void)memcpy(dest, src, n);
  72              		.loc 1 67 0
  73 000c F968     		ldr	r1, [r7, #12]
  74 000e BA68     		ldr	r2, [r7, #8]
  75 0010 7B68     		ldr	r3, [r7, #4]
  76 0012 081C     		mov	r0, r1
  77 0014 111C     		mov	r1, r2
  78 0016 1A1C     		mov	r2, r3
  79 0018 FFF7FEFF 		bl	memcpy
  68:cyfitter_cfg.c **** }
  80              		.loc 1 68 0
  81 001c BD46     		mov	sp, r7
  82 001e 04B0     		add	sp, sp, #16
  83              		@ sp needed
  84 0020 80BD     		pop	{r7, pc}
  85              		.cfi_endproc
  86              	.LFE1:
  87              		.size	CYCONFIGCPY, .-CYCONFIGCPY
  88 0022 C046     		.section	.text.CYCONFIGCPYCODE,"ax",%progbits
  89              		.align	2
  90              		.code	16
  91              		.thumb_func
  92              		.type	CYCONFIGCPYCODE, %function
  93              	CYCONFIGCPYCODE:
  94              	.LFB2:
  69:cyfitter_cfg.c **** CY_CFG_UNUSED
  70:cyfitter_cfg.c **** static void CYCONFIGCPYCODE(void *dest, const void *src, size_t n);
  71:cyfitter_cfg.c **** CY_CFG_UNUSED
  72:cyfitter_cfg.c **** static void CYCONFIGCPYCODE(void *dest, const void *src, size_t n)
  73:cyfitter_cfg.c **** {
  95              		.loc 1 73 0
  96              		.cfi_startproc
  97 0000 80B5     		push	{r7, lr}
  98              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccHGsyJi.s 			page 4


  99              		.cfi_offset 7, -8
 100              		.cfi_offset 14, -4
 101 0002 84B0     		sub	sp, sp, #16
 102              		.cfi_def_cfa_offset 24
 103 0004 00AF     		add	r7, sp, #0
 104              		.cfi_def_cfa_register 7
 105 0006 F860     		str	r0, [r7, #12]
 106 0008 B960     		str	r1, [r7, #8]
 107 000a 7A60     		str	r2, [r7, #4]
  74:cyfitter_cfg.c **** 	(void)memcpy(dest, src, n);
 108              		.loc 1 74 0
 109 000c F968     		ldr	r1, [r7, #12]
 110 000e BA68     		ldr	r2, [r7, #8]
 111 0010 7B68     		ldr	r3, [r7, #4]
 112 0012 081C     		mov	r0, r1
 113 0014 111C     		mov	r1, r2
 114 0016 1A1C     		mov	r2, r3
 115 0018 FFF7FEFF 		bl	memcpy
  75:cyfitter_cfg.c **** }
 116              		.loc 1 75 0
 117 001c BD46     		mov	sp, r7
 118 001e 04B0     		add	sp, sp, #16
 119              		@ sp needed
 120 0020 80BD     		pop	{r7, pc}
 121              		.cfi_endproc
 122              	.LFE2:
 123              		.size	CYCONFIGCPYCODE, .-CYCONFIGCPYCODE
 124 0022 C046     		.section	.text.cfg_write_bytes32,"ax",%progbits
 125              		.align	2
 126              		.code	16
 127              		.thumb_func
 128              		.type	cfg_write_bytes32, %function
 129              	cfg_write_bytes32:
 130              	.LFB3:
  76:cyfitter_cfg.c **** 
  77:cyfitter_cfg.c **** 
  78:cyfitter_cfg.c **** 
  79:cyfitter_cfg.c **** /* Clock startup error codes                                                   */
  80:cyfitter_cfg.c **** #define CYCLOCKSTART_NO_ERROR    0u
  81:cyfitter_cfg.c **** #define CYCLOCKSTART_XTAL_ERROR  1u
  82:cyfitter_cfg.c **** #define CYCLOCKSTART_32KHZ_ERROR 2u
  83:cyfitter_cfg.c **** #define CYCLOCKSTART_PLL_ERROR   3u
  84:cyfitter_cfg.c **** 
  85:cyfitter_cfg.c **** #ifdef CY_NEED_CYCLOCKSTARTUPERROR
  86:cyfitter_cfg.c **** /*******************************************************************************
  87:cyfitter_cfg.c **** * Function Name: CyClockStartupError
  88:cyfitter_cfg.c **** ********************************************************************************
  89:cyfitter_cfg.c **** * Summary:
  90:cyfitter_cfg.c **** *  If an error is encountered during clock configuration (crystal startup error,
  91:cyfitter_cfg.c **** *  PLL lock error, etc.), the system will end up here.  Unless reimplemented by
  92:cyfitter_cfg.c **** *  the customer, this function will stop in an infinite loop.
  93:cyfitter_cfg.c **** *
  94:cyfitter_cfg.c **** * Parameters:
  95:cyfitter_cfg.c **** *   void
  96:cyfitter_cfg.c **** *
  97:cyfitter_cfg.c **** * Return:
  98:cyfitter_cfg.c **** *   void
ARM GAS  /tmp/ccHGsyJi.s 			page 5


  99:cyfitter_cfg.c **** *
 100:cyfitter_cfg.c **** *******************************************************************************/
 101:cyfitter_cfg.c **** CY_CFG_UNUSED
 102:cyfitter_cfg.c **** static void CyClockStartupError(uint8 errorCode);
 103:cyfitter_cfg.c **** CY_CFG_UNUSED
 104:cyfitter_cfg.c **** static void CyClockStartupError(uint8 errorCode)
 105:cyfitter_cfg.c **** {
 106:cyfitter_cfg.c ****     /* To remove the compiler warning if errorCode not used.                */
 107:cyfitter_cfg.c ****     errorCode = errorCode;
 108:cyfitter_cfg.c **** 
 109:cyfitter_cfg.c ****     /* `#START CyClockStartupError` */
 110:cyfitter_cfg.c **** 
 111:cyfitter_cfg.c ****     /* If we have a clock startup error (bad MHz crystal, PLL lock, etc.),  */
 112:cyfitter_cfg.c ****     /* we will end up here to allow the customer to implement something to  */
 113:cyfitter_cfg.c ****     /* deal with the clock condition.                                       */
 114:cyfitter_cfg.c **** 
 115:cyfitter_cfg.c ****     /* `#END` */
 116:cyfitter_cfg.c **** 
 117:cyfitter_cfg.c ****     /* If nothing else, stop here since the clocks have not started         */
 118:cyfitter_cfg.c ****     /* correctly.                                                           */
 119:cyfitter_cfg.c ****     while(1) {}
 120:cyfitter_cfg.c **** }
 121:cyfitter_cfg.c **** #endif
 122:cyfitter_cfg.c **** 
 123:cyfitter_cfg.c **** #define CY_CFG_BASE_ADDR_COUNT 3u
 124:cyfitter_cfg.c **** CYPACKED typedef struct
 125:cyfitter_cfg.c **** {
 126:cyfitter_cfg.c **** 	uint8 offset;
 127:cyfitter_cfg.c **** 	uint8 value;
 128:cyfitter_cfg.c **** } CYPACKED_ATTR cy_cfg_addrvalue_t;
 129:cyfitter_cfg.c **** 
 130:cyfitter_cfg.c **** 
 131:cyfitter_cfg.c **** 
 132:cyfitter_cfg.c **** /*******************************************************************************
 133:cyfitter_cfg.c **** * Function Name: cfg_write_bytes32
 134:cyfitter_cfg.c **** ********************************************************************************
 135:cyfitter_cfg.c **** * Summary:
 136:cyfitter_cfg.c **** *  This function is used for setting up the chip configuration areas that
 137:cyfitter_cfg.c **** *  contain relatively sparse data.
 138:cyfitter_cfg.c **** *
 139:cyfitter_cfg.c **** * Parameters:
 140:cyfitter_cfg.c **** *   void
 141:cyfitter_cfg.c **** *
 142:cyfitter_cfg.c **** * Return:
 143:cyfitter_cfg.c **** *   void
 144:cyfitter_cfg.c **** *
 145:cyfitter_cfg.c **** *******************************************************************************/
 146:cyfitter_cfg.c **** static void cfg_write_bytes32(const uint32 addr_table[], const cy_cfg_addrvalue_t data_table[]);
 147:cyfitter_cfg.c **** static void cfg_write_bytes32(const uint32 addr_table[], const cy_cfg_addrvalue_t data_table[])
 148:cyfitter_cfg.c **** {
 131              		.loc 1 148 0
 132              		.cfi_startproc
 133 0000 80B5     		push	{r7, lr}
 134              		.cfi_def_cfa_offset 8
 135              		.cfi_offset 7, -8
 136              		.cfi_offset 14, -4
 137 0002 86B0     		sub	sp, sp, #24
ARM GAS  /tmp/ccHGsyJi.s 			page 6


 138              		.cfi_def_cfa_offset 32
 139 0004 00AF     		add	r7, sp, #0
 140              		.cfi_def_cfa_register 7
 141 0006 7860     		str	r0, [r7, #4]
 142 0008 3960     		str	r1, [r7]
 149:cyfitter_cfg.c **** 	/* For 32-bit little-endian architectures */
 150:cyfitter_cfg.c **** 	uint32 i, j = 0u;
 143              		.loc 1 150 0
 144 000a 0023     		mov	r3, #0
 145 000c 3B61     		str	r3, [r7, #16]
 151:cyfitter_cfg.c **** 	for (i = 0u; i < CY_CFG_BASE_ADDR_COUNT; i++)
 146              		.loc 1 151 0
 147 000e 0023     		mov	r3, #0
 148 0010 7B61     		str	r3, [r7, #20]
 149 0012 2EE0     		b	.L5
 150              	.L8:
 151              	.LBB2:
 152:cyfitter_cfg.c **** 	{
 153:cyfitter_cfg.c **** 		uint32 baseAddr = addr_table[i];
 152              		.loc 1 153 0
 153 0014 7B69     		ldr	r3, [r7, #20]
 154 0016 9B00     		lsl	r3, r3, #2
 155 0018 7A68     		ldr	r2, [r7, #4]
 156 001a D318     		add	r3, r2, r3
 157 001c 1B68     		ldr	r3, [r3]
 158 001e BB60     		str	r3, [r7, #8]
 154:cyfitter_cfg.c **** 		uint8 count = (uint8)baseAddr;
 159              		.loc 1 154 0
 160 0020 3B1C     		mov	r3, r7
 161 0022 0F33     		add	r3, r3, #15
 162 0024 BA68     		ldr	r2, [r7, #8]
 163 0026 1A70     		strb	r2, [r3]
 155:cyfitter_cfg.c **** 		baseAddr &= 0xFFFFFF00u;
 164              		.loc 1 155 0
 165 0028 BB68     		ldr	r3, [r7, #8]
 166 002a FF22     		mov	r2, #255
 167 002c 9343     		bic	r3, r2
 168 002e BB60     		str	r3, [r7, #8]
 156:cyfitter_cfg.c **** 		while (count != 0u)
 169              		.loc 1 156 0
 170 0030 17E0     		b	.L6
 171              	.L7:
 157:cyfitter_cfg.c **** 		{
 158:cyfitter_cfg.c **** 			CY_SET_XTND_REG8((void CYFAR *)(baseAddr + data_table[j].offset), data_table[j].value);
 172              		.loc 1 158 0
 173 0032 3B69     		ldr	r3, [r7, #16]
 174 0034 5B00     		lsl	r3, r3, #1
 175 0036 3A68     		ldr	r2, [r7]
 176 0038 D318     		add	r3, r2, r3
 177 003a 1B78     		ldrb	r3, [r3]
 178 003c 1A1C     		mov	r2, r3
 179 003e BB68     		ldr	r3, [r7, #8]
 180 0040 D318     		add	r3, r2, r3
 181 0042 3A69     		ldr	r2, [r7, #16]
 182 0044 5200     		lsl	r2, r2, #1
 183 0046 3968     		ldr	r1, [r7]
 184 0048 8A18     		add	r2, r1, r2
ARM GAS  /tmp/ccHGsyJi.s 			page 7


 185 004a 5278     		ldrb	r2, [r2, #1]
 186 004c 1A70     		strb	r2, [r3]
 159:cyfitter_cfg.c **** 			j++;
 187              		.loc 1 159 0
 188 004e 3B69     		ldr	r3, [r7, #16]
 189 0050 0133     		add	r3, r3, #1
 190 0052 3B61     		str	r3, [r7, #16]
 160:cyfitter_cfg.c **** 			count--;
 191              		.loc 1 160 0
 192 0054 3B1C     		mov	r3, r7
 193 0056 0F33     		add	r3, r3, #15
 194 0058 1A78     		ldrb	r2, [r3]
 195 005a 3B1C     		mov	r3, r7
 196 005c 0F33     		add	r3, r3, #15
 197 005e 013A     		sub	r2, r2, #1
 198 0060 1A70     		strb	r2, [r3]
 199              	.L6:
 156:cyfitter_cfg.c **** 		while (count != 0u)
 200              		.loc 1 156 0 discriminator 1
 201 0062 3B1C     		mov	r3, r7
 202 0064 0F33     		add	r3, r3, #15
 203 0066 1B78     		ldrb	r3, [r3]
 204 0068 002B     		cmp	r3, #0
 205 006a E2D1     		bne	.L7
 206              	.LBE2:
 151:cyfitter_cfg.c **** 	for (i = 0u; i < CY_CFG_BASE_ADDR_COUNT; i++)
 207              		.loc 1 151 0
 208 006c 7B69     		ldr	r3, [r7, #20]
 209 006e 0133     		add	r3, r3, #1
 210 0070 7B61     		str	r3, [r7, #20]
 211              	.L5:
 151:cyfitter_cfg.c **** 	for (i = 0u; i < CY_CFG_BASE_ADDR_COUNT; i++)
 212              		.loc 1 151 0 is_stmt 0 discriminator 1
 213 0072 7B69     		ldr	r3, [r7, #20]
 214 0074 022B     		cmp	r3, #2
 215 0076 CDD9     		bls	.L8
 161:cyfitter_cfg.c **** 		}
 162:cyfitter_cfg.c **** 	}
 163:cyfitter_cfg.c **** }
 216              		.loc 1 163 0 is_stmt 1
 217 0078 BD46     		mov	sp, r7
 218 007a 06B0     		add	sp, sp, #24
 219              		@ sp needed
 220 007c 80BD     		pop	{r7, pc}
 221              		.cfi_endproc
 222              	.LFE3:
 223              		.size	cfg_write_bytes32, .-cfg_write_bytes32
 224 007e C046     		.section	.psocinit,"ax",%progbits
 225              		.align	2
 226              		.code	16
 227              		.thumb_func
 228              		.type	ClockSetup, %function
 229              	ClockSetup:
 230              	.LFB4:
 164:cyfitter_cfg.c **** 
 165:cyfitter_cfg.c **** 
 166:cyfitter_cfg.c **** /*******************************************************************************
ARM GAS  /tmp/ccHGsyJi.s 			page 8


 167:cyfitter_cfg.c **** * Function Name: ClockSetup
 168:cyfitter_cfg.c **** ********************************************************************************
 169:cyfitter_cfg.c **** *
 170:cyfitter_cfg.c **** * Summary:
 171:cyfitter_cfg.c **** *   Performs the initialization of all of the clocks in the device based on the
 172:cyfitter_cfg.c **** *   settings in the Clock tab of the DWR.  This includes enabling the requested
 173:cyfitter_cfg.c **** *   clocks and setting the necessary dividers to produce the desired frequency. 
 174:cyfitter_cfg.c **** *
 175:cyfitter_cfg.c **** * Parameters:
 176:cyfitter_cfg.c **** *   void
 177:cyfitter_cfg.c **** *
 178:cyfitter_cfg.c **** * Return:
 179:cyfitter_cfg.c **** *   void
 180:cyfitter_cfg.c **** *
 181:cyfitter_cfg.c **** *******************************************************************************/
 182:cyfitter_cfg.c **** static void ClockSetup(void);
 183:cyfitter_cfg.c **** CY_CFG_SECTION
 184:cyfitter_cfg.c **** static void ClockSetup(void)
 185:cyfitter_cfg.c **** {
 231              		.loc 1 185 0
 232              		.cfi_startproc
 233 0000 80B5     		push	{r7, lr}
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 7, -8
 236              		.cfi_offset 14, -4
 237 0002 00AF     		add	r7, sp, #0
 238              		.cfi_def_cfa_register 7
 186:cyfitter_cfg.c **** 	/* Enable HALF_EN before trimming for the flash accelerator. */
 187:cyfitter_cfg.c **** 	CY_SET_REG32((void CYXDATA *)(CYREG_CLK_SELECT), (CY_GET_REG32((void *)CYREG_CLK_SELECT) | 0x00040
 239              		.loc 1 187 0
 240 0004 104B     		ldr	r3, .L10
 241 0006 104A     		ldr	r2, .L10
 242 0008 1268     		ldr	r2, [r2]
 243 000a 8021     		mov	r1, #128
 244 000c C902     		lsl	r1, r1, #11
 245 000e 0A43     		orr	r2, r1
 246 0010 1A60     		str	r2, [r3]
 188:cyfitter_cfg.c **** 
 189:cyfitter_cfg.c **** 	/* Setup and trim IMO based on desired frequency. */
 190:cyfitter_cfg.c **** 	CySysClkWriteImoFreq(3u);
 247              		.loc 1 190 0
 248 0012 0320     		mov	r0, #3
 249 0014 FFF7FEFF 		bl	CySysClkWriteImoFreq
 191:cyfitter_cfg.c **** 
 192:cyfitter_cfg.c **** 	/* Disable HALF_EN since it is not required at this IMO frequency. */
 193:cyfitter_cfg.c **** 	CY_SET_REG32((void CYXDATA *)(CYREG_CLK_SELECT), (CY_GET_REG32((void *)CYREG_CLK_SELECT) & 0xFFFBF
 250              		.loc 1 193 0
 251 0018 0B4B     		ldr	r3, .L10
 252 001a 0B4A     		ldr	r2, .L10
 253 001c 1168     		ldr	r1, [r2]
 254 001e 0B4A     		ldr	r2, .L10+4
 255 0020 0A40     		and	r2, r1
 256 0022 1A60     		str	r2, [r3]
 194:cyfitter_cfg.c **** 	/* CYDEV_CLK_ILO_CONFIG Starting address: CYDEV_CLK_ILO_CONFIG */
 195:cyfitter_cfg.c **** 	CY_SET_XTND_REG32((void CYFAR *)(CYREG_CLK_ILO_CONFIG), 0x80000006u);
 257              		.loc 1 195 0
 258 0024 0A4B     		ldr	r3, .L10+8
ARM GAS  /tmp/ccHGsyJi.s 			page 9


 259 0026 0B4A     		ldr	r2, .L10+12
 260 0028 1A60     		str	r2, [r3]
 196:cyfitter_cfg.c **** 
 197:cyfitter_cfg.c **** 
 198:cyfitter_cfg.c **** 	/* CYDEV_CLK_SELECT00 Starting address: CYDEV_CLK_SELECT00 */
 199:cyfitter_cfg.c **** 	CY_SET_XTND_REG32((void CYFAR *)(CYREG_CLK_SELECT08), 0x00000010u);
 261              		.loc 1 199 0
 262 002a 0B4B     		ldr	r3, .L10+16
 263 002c 1022     		mov	r2, #16
 264 002e 1A60     		str	r2, [r3]
 200:cyfitter_cfg.c **** 
 201:cyfitter_cfg.c **** 	/* CYDEV_CLK_IMO_CONFIG Starting address: CYDEV_CLK_IMO_CONFIG */
 202:cyfitter_cfg.c **** 	CY_SET_XTND_REG32((void CYFAR *)(CYREG_CLK_IMO_CONFIG), 0x80000000u);
 265              		.loc 1 202 0
 266 0030 0A4B     		ldr	r3, .L10+20
 267 0032 8022     		mov	r2, #128
 268 0034 1206     		lsl	r2, r2, #24
 269 0036 1A60     		str	r2, [r3]
 203:cyfitter_cfg.c **** 
 204:cyfitter_cfg.c **** 	/* CYDEV_CLK_DIVIDER_A00 Starting address: CYDEV_CLK_DIVIDER_A00 */
 205:cyfitter_cfg.c **** 	CY_SET_XTND_REG32((void CYFAR *)(CYREG_CLK_DIVIDER_A00), 0x80000BB7u);
 270              		.loc 1 205 0
 271 0038 094B     		ldr	r3, .L10+24
 272 003a 0A4A     		ldr	r2, .L10+28
 273 003c 1A60     		str	r2, [r3]
 206:cyfitter_cfg.c **** 
 207:cyfitter_cfg.c **** 	CY_SET_XTND_REG32((void CYFAR *)(CYREG_WDT_CONFIG), 0x00000000u);
 274              		.loc 1 207 0
 275 003e 0A4B     		ldr	r3, .L10+32
 276 0040 0022     		mov	r2, #0
 277 0042 1A60     		str	r2, [r3]
 208:cyfitter_cfg.c **** }
 278              		.loc 1 208 0
 279 0044 BD46     		mov	sp, r7
 280              		@ sp needed
 281 0046 80BD     		pop	{r7, pc}
 282              	.L11:
 283              		.align	2
 284              	.L10:
 285 0048 00010B40 		.word	1074462976
 286 004c FFFFFBFF 		.word	-262145
 287 0050 04010B40 		.word	1074462980
 288 0054 06000080 		.word	-2147483642
 289 0058 20020240 		.word	1073873440
 290 005c 08010B40 		.word	1074462984
 291 0060 00000240 		.word	1073872896
 292 0064 B70B0080 		.word	-2147480649
 293 0068 0C020B40 		.word	1074463244
 294              		.cfi_endproc
 295              	.LFE4:
 296              		.size	ClockSetup, .-ClockSetup
 297              		.section	.text.AnalogSetDefault,"ax",%progbits
 298              		.align	2
 299              		.code	16
 300              		.thumb_func
 301              		.type	AnalogSetDefault, %function
 302              	AnalogSetDefault:
ARM GAS  /tmp/ccHGsyJi.s 			page 10


 303              	.LFB5:
 209:cyfitter_cfg.c **** 
 210:cyfitter_cfg.c **** 
 211:cyfitter_cfg.c **** /* Analog API Functions */
 212:cyfitter_cfg.c **** 
 213:cyfitter_cfg.c **** 
 214:cyfitter_cfg.c **** /*******************************************************************************
 215:cyfitter_cfg.c **** * Function Name: AnalogSetDefault
 216:cyfitter_cfg.c **** ********************************************************************************
 217:cyfitter_cfg.c **** *
 218:cyfitter_cfg.c **** * Summary:
 219:cyfitter_cfg.c **** *  Sets up the analog portions of the chip to default values based on chip
 220:cyfitter_cfg.c **** *  configuration options from the project.
 221:cyfitter_cfg.c **** *
 222:cyfitter_cfg.c **** * Parameters:
 223:cyfitter_cfg.c **** *  void
 224:cyfitter_cfg.c **** *
 225:cyfitter_cfg.c **** * Return:
 226:cyfitter_cfg.c **** *  void
 227:cyfitter_cfg.c **** *
 228:cyfitter_cfg.c **** *******************************************************************************/
 229:cyfitter_cfg.c **** static void AnalogSetDefault(void);
 230:cyfitter_cfg.c **** static void AnalogSetDefault(void)
 231:cyfitter_cfg.c **** {
 304              		.loc 1 231 0
 305              		.cfi_startproc
 306 0000 80B5     		push	{r7, lr}
 307              		.cfi_def_cfa_offset 8
 308              		.cfi_offset 7, -8
 309              		.cfi_offset 14, -4
 310 0002 00AF     		add	r7, sp, #0
 311              		.cfi_def_cfa_register 7
 232:cyfitter_cfg.c **** }
 312              		.loc 1 232 0
 313 0004 BD46     		mov	sp, r7
 314              		@ sp needed
 315 0006 80BD     		pop	{r7, pc}
 316              		.cfi_endproc
 317              	.LFE5:
 318              		.size	AnalogSetDefault, .-AnalogSetDefault
 319              		.section	.psocinit
 320              		.align	2
 321              		.global	cyfitter_cfg
 322              		.code	16
 323              		.thumb_func
 324              		.type	cyfitter_cfg, %function
 325              	cyfitter_cfg:
 326              	.LFB6:
 233:cyfitter_cfg.c **** 
 234:cyfitter_cfg.c **** #define CY_AMUX_UNUSED CYREG_CM0_ROM_DWT
 235:cyfitter_cfg.c **** 
 236:cyfitter_cfg.c **** 
 237:cyfitter_cfg.c **** /*******************************************************************************
 238:cyfitter_cfg.c **** * Function Name: cyfitter_cfg
 239:cyfitter_cfg.c **** ********************************************************************************
 240:cyfitter_cfg.c **** * Summary:
 241:cyfitter_cfg.c **** *  This function is called by the start-up code for the selected device. It
ARM GAS  /tmp/ccHGsyJi.s 			page 11


 242:cyfitter_cfg.c **** *  performs all of the necessary device configuration based on the design
 243:cyfitter_cfg.c **** *  settings.  This includes settings from the Design Wide Resources (DWR) such
 244:cyfitter_cfg.c **** *  as Clocks and Pins as well as any component configuration that is necessary.
 245:cyfitter_cfg.c **** *
 246:cyfitter_cfg.c **** * Parameters:  
 247:cyfitter_cfg.c **** *   void
 248:cyfitter_cfg.c **** *
 249:cyfitter_cfg.c **** * Return:
 250:cyfitter_cfg.c **** *   void
 251:cyfitter_cfg.c **** *
 252:cyfitter_cfg.c **** *******************************************************************************/
 253:cyfitter_cfg.c **** CY_CFG_SECTION
 254:cyfitter_cfg.c **** void cyfitter_cfg(void)
 255:cyfitter_cfg.c **** {
 327              		.loc 1 255 0
 328              		.cfi_startproc
 329 006c 80B5     		push	{r7, lr}
 330              		.cfi_def_cfa_offset 8
 331              		.cfi_offset 7, -8
 332              		.cfi_offset 14, -4
 333 006e 82B0     		sub	sp, sp, #8
 334              		.cfi_def_cfa_offset 16
 335 0070 00AF     		add	r7, sp, #0
 336              		.cfi_def_cfa_register 7
 256:cyfitter_cfg.c **** 	/* Disable interrupts by default. Let user enable if/when they want. */
 257:cyfitter_cfg.c **** 	CyGlobalIntDisable;
 337              		.loc 1 257 0
 338              	@ 257 "cyfitter_cfg.c" 1
 339 0072 72B6     		CPSID   i
 340              	@ 0 "" 2
 341              		.code	16
 342              	.LBB3:
 258:cyfitter_cfg.c **** 
 259:cyfitter_cfg.c **** 	{
 260:cyfitter_cfg.c **** 		static const uint32 CYCODE cy_cfg_addr_table[] = {
 261:cyfitter_cfg.c **** 			0x400F3301u, /* Base address: 0x400F3300 Count: 1 */
 262:cyfitter_cfg.c **** 			0x400F4103u, /* Base address: 0x400F4100 Count: 3 */
 263:cyfitter_cfg.c **** 			0x400F4304u, /* Base address: 0x400F4300 Count: 4 */
 264:cyfitter_cfg.c **** 		};
 265:cyfitter_cfg.c **** 
 266:cyfitter_cfg.c **** 		static const cy_cfg_addrvalue_t CYCODE cy_cfg_data_table[] = {
 267:cyfitter_cfg.c **** 			{0xE6u, 0x10u},
 268:cyfitter_cfg.c **** 			{0x62u, 0x04u},
 269:cyfitter_cfg.c **** 			{0x8Eu, 0x04u},
 270:cyfitter_cfg.c **** 			{0xD8u, 0x40u},
 271:cyfitter_cfg.c **** 			{0x18u, 0x80u},
 272:cyfitter_cfg.c **** 			{0x8Cu, 0x40u},
 273:cyfitter_cfg.c **** 			{0xC6u, 0x08u},
 274:cyfitter_cfg.c **** 			{0xE6u, 0x08u},
 275:cyfitter_cfg.c **** 		};
 276:cyfitter_cfg.c **** 
 277:cyfitter_cfg.c **** 
 278:cyfitter_cfg.c **** 
 279:cyfitter_cfg.c **** 		CYPACKED typedef struct {
 280:cyfitter_cfg.c **** 			void CYFAR *address;
 281:cyfitter_cfg.c **** 			uint16 size;
 282:cyfitter_cfg.c **** 		} CYPACKED_ATTR cfg_memset_t;
ARM GAS  /tmp/ccHGsyJi.s 			page 12


 283:cyfitter_cfg.c **** 
 284:cyfitter_cfg.c **** 		static const cfg_memset_t CYCODE cfg_memset_list [] = {
 285:cyfitter_cfg.c **** 			/* address, size */
 286:cyfitter_cfg.c **** 			{(void CYFAR *)(CYDEV_UDB_P0_U0_BASE), 1024u},
 287:cyfitter_cfg.c **** 			{(void CYFAR *)(CYDEV_UDB_DSI0_BASE), 1024u},
 288:cyfitter_cfg.c **** 		};
 289:cyfitter_cfg.c **** 
 290:cyfitter_cfg.c **** 		uint8 CYDATA i;
 291:cyfitter_cfg.c **** 
 292:cyfitter_cfg.c **** 		/* Zero out critical memory blocks before beginning configuration */
 293:cyfitter_cfg.c **** 		for (i = 0u; i < (sizeof(cfg_memset_list)/sizeof(cfg_memset_list[0])); i++)
 343              		.loc 1 293 0
 344 0074 FB1D     		add	r3, r7, #7
 345 0076 0022     		mov	r2, #0
 346 0078 1A70     		strb	r2, [r3]
 347 007a 23E0     		b	.L14
 348              	.L15:
 349              	.LBB4:
 294:cyfitter_cfg.c **** 		{
 295:cyfitter_cfg.c **** 			const cfg_memset_t CYCODE * CYDATA ms = &cfg_memset_list[i];
 350              		.loc 1 295 0 discriminator 2
 351 007c FB1D     		add	r3, r7, #7
 352 007e 1A78     		ldrb	r2, [r3]
 353 0080 131C     		mov	r3, r2
 354 0082 5B00     		lsl	r3, r3, #1
 355 0084 9B18     		add	r3, r3, r2
 356 0086 5B00     		lsl	r3, r3, #1
 357 0088 324A     		ldr	r2, .L16
 358 008a 9B18     		add	r3, r3, r2
 359 008c 3B60     		str	r3, [r7]
 296:cyfitter_cfg.c **** 			CYMEMZERO(ms->address, (size_t)(uint32)(ms->size));
 360              		.loc 1 296 0 discriminator 2
 361 008e 3B68     		ldr	r3, [r7]
 362 0090 1A78     		ldrb	r2, [r3]
 363 0092 5978     		ldrb	r1, [r3, #1]
 364 0094 0902     		lsl	r1, r1, #8
 365 0096 0A43     		orr	r2, r1
 366 0098 9978     		ldrb	r1, [r3, #2]
 367 009a 0904     		lsl	r1, r1, #16
 368 009c 0A43     		orr	r2, r1
 369 009e DB78     		ldrb	r3, [r3, #3]
 370 00a0 1B06     		lsl	r3, r3, #24
 371 00a2 1343     		orr	r3, r2
 372 00a4 1A1C     		mov	r2, r3
 373 00a6 3B68     		ldr	r3, [r7]
 374 00a8 1979     		ldrb	r1, [r3, #4]
 375 00aa 5B79     		ldrb	r3, [r3, #5]
 376 00ac 1B02     		lsl	r3, r3, #8
 377 00ae 0B43     		orr	r3, r1
 378 00b0 9BB2     		uxth	r3, r3
 379 00b2 101C     		mov	r0, r2
 380 00b4 191C     		mov	r1, r3
 381 00b6 FFF7FEFF 		bl	CYMEMZERO
 382              	.LBE4:
 293:cyfitter_cfg.c **** 		for (i = 0u; i < (sizeof(cfg_memset_list)/sizeof(cfg_memset_list[0])); i++)
 383              		.loc 1 293 0 discriminator 2
 384 00ba FB1D     		add	r3, r7, #7
ARM GAS  /tmp/ccHGsyJi.s 			page 13


 385 00bc 1A78     		ldrb	r2, [r3]
 386 00be FB1D     		add	r3, r7, #7
 387 00c0 0132     		add	r2, r2, #1
 388 00c2 1A70     		strb	r2, [r3]
 389              	.L14:
 293:cyfitter_cfg.c **** 		for (i = 0u; i < (sizeof(cfg_memset_list)/sizeof(cfg_memset_list[0])); i++)
 390              		.loc 1 293 0 is_stmt 0 discriminator 1
 391 00c4 FB1D     		add	r3, r7, #7
 392 00c6 1B78     		ldrb	r3, [r3]
 393 00c8 012B     		cmp	r3, #1
 394 00ca D7D9     		bls	.L15
 297:cyfitter_cfg.c **** 		}
 298:cyfitter_cfg.c **** 
 299:cyfitter_cfg.c **** 		cfg_write_bytes32(cy_cfg_addr_table, cy_cfg_data_table);
 395              		.loc 1 299 0 is_stmt 1
 396 00cc 224A     		ldr	r2, .L16+4
 397 00ce 234B     		ldr	r3, .L16+8
 398 00d0 101C     		mov	r0, r2
 399 00d2 191C     		mov	r1, r3
 400 00d4 FFF7FEFF 		bl	cfg_write_bytes32
 300:cyfitter_cfg.c **** 
 301:cyfitter_cfg.c **** 		/* HSIOM Starting address: CYDEV_HSIOM_BASE */
 302:cyfitter_cfg.c **** 		CY_SET_XTND_REG32((void CYFAR *)(CYREG_HSIOM_PORT_SEL1), 0x03000000u);
 401              		.loc 1 302 0
 402 00d8 214B     		ldr	r3, .L16+12
 403 00da C022     		mov	r2, #192
 404 00dc 9204     		lsl	r2, r2, #18
 405 00de 1A60     		str	r2, [r3]
 303:cyfitter_cfg.c **** 
 304:cyfitter_cfg.c **** 		/* FORCED_HSIOM Starting address: CYDEV_HSIOM_PORT_SEL3 */
 305:cyfitter_cfg.c **** 		CY_SET_XTND_REG32((void CYFAR *)(CYREG_HSIOM_PORT_SEL3), 0x00000000u);
 406              		.loc 1 305 0
 407 00e0 204B     		ldr	r3, .L16+16
 408 00e2 0022     		mov	r2, #0
 409 00e4 1A60     		str	r2, [r3]
 306:cyfitter_cfg.c **** 
 307:cyfitter_cfg.c **** 		/* IOPINS0_3 Starting address: CYDEV_PRT3_PC */
 308:cyfitter_cfg.c **** 		CY_SET_XTND_REG32((void CYFAR *)(CYREG_PRT3_PC), 0x00000000u);
 410              		.loc 1 308 0
 411 00e6 204B     		ldr	r3, .L16+20
 412 00e8 0022     		mov	r2, #0
 413 00ea 1A60     		str	r2, [r3]
 309:cyfitter_cfg.c **** 
 310:cyfitter_cfg.c **** 		/* UDB_PA_1 Starting address: CYDEV_UDB_PA1_BASE */
 311:cyfitter_cfg.c **** 		CY_SET_XTND_REG32((void CYFAR *)(CYDEV_UDB_PA1_BASE), 0x00990000u);
 414              		.loc 1 311 0
 415 00ec 1F4B     		ldr	r3, .L16+24
 416 00ee 9922     		mov	r2, #153
 417 00f0 1204     		lsl	r2, r2, #16
 418 00f2 1A60     		str	r2, [r3]
 312:cyfitter_cfg.c **** 		CY_SET_XTND_REG32((void CYFAR *)(CYREG_UDB_PA1_CFG8), 0x20000000u);
 419              		.loc 1 312 0
 420 00f4 1E4B     		ldr	r3, .L16+28
 421 00f6 8022     		mov	r2, #128
 422 00f8 9205     		lsl	r2, r2, #22
 423 00fa 1A60     		str	r2, [r3]
 313:cyfitter_cfg.c **** 
ARM GAS  /tmp/ccHGsyJi.s 			page 14


 314:cyfitter_cfg.c **** 		/* TCPWM_CNT0 Starting address: CYDEV_TCPWM_CNT0_TR_CTRL0 */
 315:cyfitter_cfg.c **** 		CY_SET_XTND_REG32((void CYFAR *)(CYREG_TCPWM_CNT0_TR_CTRL0), 0x00010010u);
 424              		.loc 1 315 0
 425 00fc 1D4B     		ldr	r3, .L16+32
 426 00fe 1E4A     		ldr	r2, .L16+36
 427 0100 1A60     		str	r2, [r3]
 316:cyfitter_cfg.c **** 
 317:cyfitter_cfg.c **** 		/* Enable digital routing */
 318:cyfitter_cfg.c **** 		CY_SET_XTND_REG8((void *)CYREG_UDB_UDBIF_BANK_CTL, CY_GET_XTND_REG8((void *)CYREG_UDB_UDBIF_BANK_
 428              		.loc 1 318 0
 429 0102 1E4B     		ldr	r3, .L16+40
 430 0104 1D4A     		ldr	r2, .L16+40
 431 0106 1278     		ldrb	r2, [r2]
 432 0108 D2B2     		uxtb	r2, r2
 433 010a 0221     		mov	r1, #2
 434 010c 0A43     		orr	r2, r1
 435 010e D2B2     		uxtb	r2, r2
 436 0110 1A70     		strb	r2, [r3]
 319:cyfitter_cfg.c **** 
 320:cyfitter_cfg.c **** 		/* Enable UDB array */
 321:cyfitter_cfg.c **** 		CY_SET_XTND_REG8((void *)CYREG_UDB_UDBIF_WAIT_CFG, (uint8)((CY_GET_XTND_REG8((void *)CYREG_UDB_UD
 437              		.loc 1 321 0
 438 0112 1B4B     		ldr	r3, .L16+44
 439 0114 1A4A     		ldr	r2, .L16+44
 440 0116 1278     		ldrb	r2, [r2]
 441 0118 D2B2     		uxtb	r2, r2
 442 011a 3C21     		mov	r1, #60
 443 011c 8A43     		bic	r2, r1
 444 011e D2B2     		uxtb	r2, r2
 445 0120 1421     		mov	r1, #20
 446 0122 0A43     		orr	r2, r1
 447 0124 D2B2     		uxtb	r2, r2
 448 0126 1A70     		strb	r2, [r3]
 322:cyfitter_cfg.c **** 		CY_SET_XTND_REG8((void *)CYREG_UDB_UDBIF_BANK_CTL, (uint8)(CY_GET_XTND_REG8((void *)CYREG_UDB_UDB
 449              		.loc 1 322 0
 450 0128 144B     		ldr	r3, .L16+40
 451 012a 144A     		ldr	r2, .L16+40
 452 012c 1278     		ldrb	r2, [r2]
 453 012e D2B2     		uxtb	r2, r2
 454 0130 1621     		mov	r1, #22
 455 0132 0A43     		orr	r2, r1
 456 0134 D2B2     		uxtb	r2, r2
 457 0136 1A70     		strb	r2, [r3]
 458              	.LBE3:
 323:cyfitter_cfg.c **** 	}
 324:cyfitter_cfg.c **** 
 325:cyfitter_cfg.c **** 	/* Perform second pass device configuration. These items must be configured in specific order afte
 326:cyfitter_cfg.c **** 	/* IOPINS0_1 Starting address: CYDEV_PRT1_DR */
 327:cyfitter_cfg.c **** 	CY_SET_XTND_REG32((void CYFAR *)(CYREG_PRT1_DR), 0x00000040u);
 459              		.loc 1 327 0
 460 0138 124B     		ldr	r3, .L16+48
 461 013a 4022     		mov	r2, #64
 462 013c 1A60     		str	r2, [r3]
 328:cyfitter_cfg.c **** 	CY_SET_XTND_REG32((void CYFAR *)(CYREG_PRT1_PC), 0x00180000u);
 463              		.loc 1 328 0
 464 013e 124B     		ldr	r3, .L16+52
 465 0140 C022     		mov	r2, #192
ARM GAS  /tmp/ccHGsyJi.s 			page 15


 466 0142 5203     		lsl	r2, r2, #13
 467 0144 1A60     		str	r2, [r3]
 329:cyfitter_cfg.c **** 
 330:cyfitter_cfg.c **** 	/* Setup clocks based on selections from Clock DWR */
 331:cyfitter_cfg.c **** 	ClockSetup();
 468              		.loc 1 331 0
 469 0146 FFF75BFF 		bl	ClockSetup
 332:cyfitter_cfg.c **** 
 333:cyfitter_cfg.c **** 	/* Perform basic analog initialization to defaults */
 334:cyfitter_cfg.c **** 	AnalogSetDefault();
 470              		.loc 1 334 0
 471 014a FFF7FEFF 		bl	AnalogSetDefault
 335:cyfitter_cfg.c **** 
 336:cyfitter_cfg.c **** }
 472              		.loc 1 336 0
 473 014e BD46     		mov	sp, r7
 474 0150 02B0     		add	sp, sp, #8
 475              		@ sp needed
 476 0152 80BD     		pop	{r7, pc}
 477              	.L17:
 478              		.align	2
 479              	.L16:
 480 0154 00000000 		.word	cfg_memset_list.4678
 481 0158 0C000000 		.word	cy_cfg_addr_table.4672
 482 015c 18000000 		.word	cy_cfg_data_table.4673
 483 0160 04000140 		.word	1073807364
 484 0164 0C000140 		.word	1073807372
 485 0168 08030440 		.word	1074004744
 486 016c 10500F40 		.word	1074745360
 487 0170 18500F40 		.word	1074745368
 488 0174 20010540 		.word	1074069792
 489 0178 10000100 		.word	65552
 490 017c 00700F40 		.word	1074753536
 491 0180 01700F40 		.word	1074753537
 492 0184 00010440 		.word	1074004224
 493 0188 08010440 		.word	1074004232
 494              		.cfi_endproc
 495              	.LFE6:
 496              		.size	cyfitter_cfg, .-cyfitter_cfg
 497              		.section	.rodata
 498              		.align	2
 499              		.type	cfg_memset_list.4678, %object
 500              		.size	cfg_memset_list.4678, 12
 501              	cfg_memset_list.4678:
 502 0000 00300F40 		.word	1074737152
 503 0004 0004     		.short	1024
 504 0006 00400F40 		.4byte	1074741248
 505 000a 0004     		.short	1024
 506              		.align	2
 507              		.type	cy_cfg_addr_table.4672, %object
 508              		.size	cy_cfg_addr_table.4672, 12
 509              	cy_cfg_addr_table.4672:
 510 000c 01330F40 		.word	1074737921
 511 0010 03410F40 		.word	1074741507
 512 0014 04430F40 		.word	1074742020
 513              		.align	2
 514              		.type	cy_cfg_data_table.4673, %object
ARM GAS  /tmp/ccHGsyJi.s 			page 16


 515              		.size	cy_cfg_data_table.4673, 16
 516              	cy_cfg_data_table.4673:
 517 0018 E6       		.byte	-26
 518 0019 10       		.byte	16
 519 001a 62       		.byte	98
 520 001b 04       		.byte	4
 521 001c 8E       		.byte	-114
 522 001d 04       		.byte	4
 523 001e D8       		.byte	-40
 524 001f 40       		.byte	64
 525 0020 18       		.byte	24
 526 0021 80       		.byte	-128
 527 0022 8C       		.byte	-116
 528 0023 40       		.byte	64
 529 0024 C6       		.byte	-58
 530 0025 08       		.byte	8
 531 0026 E6       		.byte	-26
 532 0027 08       		.byte	8
 533              		.text
 534              	.Letext0:
 535              		.file 2 "/opt/Freescale/KDS_3.0.0/toolchain/lib/gcc/arm-none-eabi/4.8.4/include/stddef.h"
 536              		.file 3 "cytypes.h"
 537              		.section	.debug_info,"",%progbits
 538              	.Ldebug_info0:
 539 0000 4C030000 		.4byte	0x34c
 540 0004 0400     		.2byte	0x4
 541 0006 00000000 		.4byte	.Ldebug_abbrev0
 542 000a 04       		.byte	0x4
 543 000b 01       		.uleb128 0x1
 544 000c AE010000 		.4byte	.LASF39
 545 0010 01       		.byte	0x1
 546 0011 59000000 		.4byte	.LASF40
 547 0015 07010000 		.4byte	.LASF41
 548 0019 00000000 		.4byte	.Ldebug_ranges0+0
 549 001d 00000000 		.4byte	0
 550 0021 00000000 		.4byte	.Ldebug_line0
 551 0025 02       		.uleb128 0x2
 552 0026 04       		.byte	0x4
 553 0027 05       		.byte	0x5
 554 0028 696E7400 		.ascii	"int\000"
 555 002c 03       		.uleb128 0x3
 556 002d 06000000 		.4byte	.LASF11
 557 0031 02       		.byte	0x2
 558 0032 D4       		.byte	0xd4
 559 0033 37000000 		.4byte	0x37
 560 0037 04       		.uleb128 0x4
 561 0038 04       		.byte	0x4
 562 0039 07       		.byte	0x7
 563 003a 2C010000 		.4byte	.LASF0
 564 003e 04       		.uleb128 0x4
 565 003f 01       		.byte	0x1
 566 0040 06       		.byte	0x6
 567 0041 33020000 		.4byte	.LASF1
 568 0045 04       		.uleb128 0x4
 569 0046 01       		.byte	0x1
 570 0047 08       		.byte	0x8
 571 0048 AF000000 		.4byte	.LASF2
ARM GAS  /tmp/ccHGsyJi.s 			page 17


 572 004c 04       		.uleb128 0x4
 573 004d 02       		.byte	0x2
 574 004e 05       		.byte	0x5
 575 004f A4010000 		.4byte	.LASF3
 576 0053 04       		.uleb128 0x4
 577 0054 02       		.byte	0x2
 578 0055 07       		.byte	0x7
 579 0056 3F020000 		.4byte	.LASF4
 580 005a 04       		.uleb128 0x4
 581 005b 04       		.byte	0x4
 582 005c 05       		.byte	0x5
 583 005d 2A020000 		.4byte	.LASF5
 584 0061 04       		.uleb128 0x4
 585 0062 04       		.byte	0x4
 586 0063 07       		.byte	0x7
 587 0064 8D000000 		.4byte	.LASF6
 588 0068 04       		.uleb128 0x4
 589 0069 08       		.byte	0x8
 590 006a 05       		.byte	0x5
 591 006b 77010000 		.4byte	.LASF7
 592 006f 04       		.uleb128 0x4
 593 0070 08       		.byte	0x8
 594 0071 07       		.byte	0x7
 595 0072 41010000 		.4byte	.LASF8
 596 0076 04       		.uleb128 0x4
 597 0077 04       		.byte	0x4
 598 0078 07       		.byte	0x7
 599 0079 6E010000 		.4byte	.LASF9
 600 007d 05       		.uleb128 0x5
 601 007e 04       		.byte	0x4
 602 007f 04       		.uleb128 0x4
 603 0080 01       		.byte	0x1
 604 0081 08       		.byte	0x8
 605 0082 85010000 		.4byte	.LASF10
 606 0086 03       		.uleb128 0x3
 607 0087 9F000000 		.4byte	.LASF12
 608 008b 03       		.byte	0x3
 609 008c 5B       		.byte	0x5b
 610 008d 45000000 		.4byte	0x45
 611 0091 03       		.uleb128 0x3
 612 0092 EE000000 		.4byte	.LASF13
 613 0096 03       		.byte	0x3
 614 0097 5C       		.byte	0x5c
 615 0098 53000000 		.4byte	0x53
 616 009c 03       		.uleb128 0x3
 617 009d 00010000 		.4byte	.LASF14
 618 00a1 03       		.byte	0x3
 619 00a2 5D       		.byte	0x5d
 620 00a3 61000000 		.4byte	0x61
 621 00a7 04       		.uleb128 0x4
 622 00a8 04       		.byte	0x4
 623 00a9 04       		.byte	0x4
 624 00aa 68000000 		.4byte	.LASF15
 625 00ae 04       		.uleb128 0x4
 626 00af 08       		.byte	0x8
 627 00b0 04       		.byte	0x4
 628 00b1 BD000000 		.4byte	.LASF16
ARM GAS  /tmp/ccHGsyJi.s 			page 18


 629 00b5 03       		.uleb128 0x3
 630 00b6 88000000 		.4byte	.LASF17
 631 00ba 03       		.byte	0x3
 632 00bb F0       		.byte	0xf0
 633 00bc C0000000 		.4byte	0xc0
 634 00c0 06       		.uleb128 0x6
 635 00c1 86000000 		.4byte	0x86
 636 00c5 03       		.uleb128 0x3
 637 00c6 00000000 		.4byte	.LASF18
 638 00ca 03       		.byte	0x3
 639 00cb F2       		.byte	0xf2
 640 00cc D0000000 		.4byte	0xd0
 641 00d0 06       		.uleb128 0x6
 642 00d1 9C000000 		.4byte	0x9c
 643 00d5 07       		.uleb128 0x7
 644 00d6 02       		.byte	0x2
 645 00d7 01       		.byte	0x1
 646 00d8 7C       		.byte	0x7c
 647 00d9 F6000000 		.4byte	0xf6
 648 00dd 08       		.uleb128 0x8
 649 00de 9D010000 		.4byte	.LASF19
 650 00e2 01       		.byte	0x1
 651 00e3 7E       		.byte	0x7e
 652 00e4 86000000 		.4byte	0x86
 653 00e8 00       		.byte	0
 654 00e9 08       		.uleb128 0x8
 655 00ea 1E000000 		.4byte	.LASF20
 656 00ee 01       		.byte	0x1
 657 00ef 7F       		.byte	0x7f
 658 00f0 86000000 		.4byte	0x86
 659 00f4 01       		.byte	0x1
 660 00f5 00       		.byte	0
 661 00f6 03       		.uleb128 0x3
 662 00f7 8A010000 		.4byte	.LASF21
 663 00fb 01       		.byte	0x1
 664 00fc 80       		.byte	0x80
 665 00fd D5000000 		.4byte	0xd5
 666 0101 09       		.uleb128 0x9
 667 0102 A5000000 		.4byte	.LASF22
 668 0106 01       		.byte	0x1
 669 0107 3A       		.byte	0x3a
 670 0108 00000000 		.4byte	.LFB0
 671 010c 1E000000 		.4byte	.LFE0-.LFB0
 672 0110 01       		.uleb128 0x1
 673 0111 9C       		.byte	0x9c
 674 0112 2F010000 		.4byte	0x12f
 675 0116 0A       		.uleb128 0xa
 676 0117 7300     		.ascii	"s\000"
 677 0119 01       		.byte	0x1
 678 011a 3A       		.byte	0x3a
 679 011b 7D000000 		.4byte	0x7d
 680 011f 02       		.uleb128 0x2
 681 0120 91       		.byte	0x91
 682 0121 74       		.sleb128 -12
 683 0122 0A       		.uleb128 0xa
 684 0123 6E00     		.ascii	"n\000"
 685 0125 01       		.byte	0x1
ARM GAS  /tmp/ccHGsyJi.s 			page 19


 686 0126 3A       		.byte	0x3a
 687 0127 2C000000 		.4byte	0x2c
 688 012b 02       		.uleb128 0x2
 689 012c 91       		.byte	0x91
 690 012d 70       		.sleb128 -16
 691 012e 00       		.byte	0
 692 012f 09       		.uleb128 0x9
 693 0130 62020000 		.4byte	.LASF23
 694 0134 01       		.byte	0x1
 695 0135 41       		.byte	0x41
 696 0136 00000000 		.4byte	.LFB1
 697 013a 22000000 		.4byte	.LFE1-.LFB1
 698 013e 01       		.uleb128 0x1
 699 013f 9C       		.byte	0x9c
 700 0140 6D010000 		.4byte	0x16d
 701 0144 0B       		.uleb128 0xb
 702 0145 6E000000 		.4byte	.LASF24
 703 0149 01       		.byte	0x1
 704 014a 41       		.byte	0x41
 705 014b 7D000000 		.4byte	0x7d
 706 014f 02       		.uleb128 0x2
 707 0150 91       		.byte	0x91
 708 0151 74       		.sleb128 -12
 709 0152 0A       		.uleb128 0xa
 710 0153 73726300 		.ascii	"src\000"
 711 0157 01       		.byte	0x1
 712 0158 41       		.byte	0x41
 713 0159 6D010000 		.4byte	0x16d
 714 015d 02       		.uleb128 0x2
 715 015e 91       		.byte	0x91
 716 015f 70       		.sleb128 -16
 717 0160 0A       		.uleb128 0xa
 718 0161 6E00     		.ascii	"n\000"
 719 0163 01       		.byte	0x1
 720 0164 41       		.byte	0x41
 721 0165 2C000000 		.4byte	0x2c
 722 0169 02       		.uleb128 0x2
 723 016a 91       		.byte	0x91
 724 016b 6C       		.sleb128 -20
 725 016c 00       		.byte	0
 726 016d 0C       		.uleb128 0xc
 727 016e 04       		.byte	0x4
 728 016f 73010000 		.4byte	0x173
 729 0173 0D       		.uleb128 0xd
 730 0174 09       		.uleb128 0x9
 731 0175 52020000 		.4byte	.LASF25
 732 0179 01       		.byte	0x1
 733 017a 48       		.byte	0x48
 734 017b 00000000 		.4byte	.LFB2
 735 017f 22000000 		.4byte	.LFE2-.LFB2
 736 0183 01       		.uleb128 0x1
 737 0184 9C       		.byte	0x9c
 738 0185 B2010000 		.4byte	0x1b2
 739 0189 0B       		.uleb128 0xb
 740 018a 6E000000 		.4byte	.LASF24
 741 018e 01       		.byte	0x1
 742 018f 48       		.byte	0x48
ARM GAS  /tmp/ccHGsyJi.s 			page 20


 743 0190 7D000000 		.4byte	0x7d
 744 0194 02       		.uleb128 0x2
 745 0195 91       		.byte	0x91
 746 0196 74       		.sleb128 -12
 747 0197 0A       		.uleb128 0xa
 748 0198 73726300 		.ascii	"src\000"
 749 019c 01       		.byte	0x1
 750 019d 48       		.byte	0x48
 751 019e 6D010000 		.4byte	0x16d
 752 01a2 02       		.uleb128 0x2
 753 01a3 91       		.byte	0x91
 754 01a4 70       		.sleb128 -16
 755 01a5 0A       		.uleb128 0xa
 756 01a6 6E00     		.ascii	"n\000"
 757 01a8 01       		.byte	0x1
 758 01a9 48       		.byte	0x48
 759 01aa 2C000000 		.4byte	0x2c
 760 01ae 02       		.uleb128 0x2
 761 01af 91       		.byte	0x91
 762 01b0 6C       		.sleb128 -20
 763 01b1 00       		.byte	0
 764 01b2 0E       		.uleb128 0xe
 765 01b3 C4000000 		.4byte	.LASF26
 766 01b7 01       		.byte	0x1
 767 01b8 93       		.byte	0x93
 768 01b9 00000000 		.4byte	.LFB3
 769 01bd 7E000000 		.4byte	.LFE3-.LFB3
 770 01c1 01       		.uleb128 0x1
 771 01c2 9C       		.byte	0x9c
 772 01c3 22020000 		.4byte	0x222
 773 01c7 0B       		.uleb128 0xb
 774 01c8 E3000000 		.4byte	.LASF27
 775 01cc 01       		.byte	0x1
 776 01cd 93       		.byte	0x93
 777 01ce 22020000 		.4byte	0x222
 778 01d2 02       		.uleb128 0x2
 779 01d3 91       		.byte	0x91
 780 01d4 64       		.sleb128 -28
 781 01d5 0B       		.uleb128 0xb
 782 01d6 F5000000 		.4byte	.LASF28
 783 01da 01       		.byte	0x1
 784 01db 93       		.byte	0x93
 785 01dc 2D020000 		.4byte	0x22d
 786 01e0 02       		.uleb128 0x2
 787 01e1 91       		.byte	0x91
 788 01e2 60       		.sleb128 -32
 789 01e3 0F       		.uleb128 0xf
 790 01e4 6900     		.ascii	"i\000"
 791 01e6 01       		.byte	0x1
 792 01e7 96       		.byte	0x96
 793 01e8 9C000000 		.4byte	0x9c
 794 01ec 02       		.uleb128 0x2
 795 01ed 91       		.byte	0x91
 796 01ee 74       		.sleb128 -12
 797 01ef 0F       		.uleb128 0xf
 798 01f0 6A00     		.ascii	"j\000"
 799 01f2 01       		.byte	0x1
ARM GAS  /tmp/ccHGsyJi.s 			page 21


 800 01f3 96       		.byte	0x96
 801 01f4 9C000000 		.4byte	0x9c
 802 01f8 02       		.uleb128 0x2
 803 01f9 91       		.byte	0x91
 804 01fa 70       		.sleb128 -16
 805 01fb 10       		.uleb128 0x10
 806 01fc 14000000 		.4byte	.LBB2
 807 0200 58000000 		.4byte	.LBE2-.LBB2
 808 0204 11       		.uleb128 0x11
 809 0205 65010000 		.4byte	.LASF29
 810 0209 01       		.byte	0x1
 811 020a 99       		.byte	0x99
 812 020b 9C000000 		.4byte	0x9c
 813 020f 02       		.uleb128 0x2
 814 0210 91       		.byte	0x91
 815 0211 68       		.sleb128 -24
 816 0212 11       		.uleb128 0x11
 817 0213 24000000 		.4byte	.LASF30
 818 0217 01       		.byte	0x1
 819 0218 9A       		.byte	0x9a
 820 0219 86000000 		.4byte	0x86
 821 021d 02       		.uleb128 0x2
 822 021e 91       		.byte	0x91
 823 021f 6F       		.sleb128 -17
 824 0220 00       		.byte	0
 825 0221 00       		.byte	0
 826 0222 0C       		.uleb128 0xc
 827 0223 04       		.byte	0x4
 828 0224 28020000 		.4byte	0x228
 829 0228 12       		.uleb128 0x12
 830 0229 9C000000 		.4byte	0x9c
 831 022d 0C       		.uleb128 0xc
 832 022e 04       		.byte	0x4
 833 022f 33020000 		.4byte	0x233
 834 0233 12       		.uleb128 0x12
 835 0234 F6000000 		.4byte	0xf6
 836 0238 13       		.uleb128 0x13
 837 0239 2A000000 		.4byte	.LASF31
 838 023d 01       		.byte	0x1
 839 023e B8       		.byte	0xb8
 840 023f 00000000 		.4byte	.LFB4
 841 0243 6C000000 		.4byte	.LFE4-.LFB4
 842 0247 01       		.uleb128 0x1
 843 0248 9C       		.byte	0x9c
 844 0249 14       		.uleb128 0x14
 845 024a 0D000000 		.4byte	.LASF32
 846 024e 01       		.byte	0x1
 847 024f E6       		.byte	0xe6
 848 0250 00000000 		.4byte	.LFB5
 849 0254 08000000 		.4byte	.LFE5-.LFB5
 850 0258 01       		.uleb128 0x1
 851 0259 9C       		.byte	0x9c
 852 025a 15       		.uleb128 0x15
 853 025b D6000000 		.4byte	.LASF42
 854 025f 01       		.byte	0x1
 855 0260 FE       		.byte	0xfe
 856 0261 6C000000 		.4byte	.LFB6
ARM GAS  /tmp/ccHGsyJi.s 			page 22


 857 0265 20010000 		.4byte	.LFE6-.LFB6
 858 0269 01       		.uleb128 0x1
 859 026a 9C       		.byte	0x9c
 860 026b 25030000 		.4byte	0x325
 861 026f 10       		.uleb128 0x10
 862 0270 74000000 		.4byte	.LBB3
 863 0274 C4000000 		.4byte	.LBE3-.LBB3
 864 0278 16       		.uleb128 0x16
 865 0279 35000000 		.4byte	.LASF33
 866 027d 01       		.byte	0x1
 867 027e 0401     		.2byte	0x104
 868 0280 35030000 		.4byte	0x335
 869 0284 05       		.uleb128 0x5
 870 0285 03       		.byte	0x3
 871 0286 0C000000 		.4byte	cy_cfg_addr_table.4672
 872 028a 16       		.uleb128 0x16
 873 028b 47000000 		.4byte	.LASF34
 874 028f 01       		.byte	0x1
 875 0290 0A01     		.2byte	0x10a
 876 0292 4A030000 		.4byte	0x34a
 877 0296 05       		.uleb128 0x5
 878 0297 03       		.byte	0x3
 879 0298 18000000 		.4byte	cy_cfg_data_table.4673
 880 029c 17       		.uleb128 0x17
 881 029d 06       		.byte	0x6
 882 029e 01       		.byte	0x1
 883 029f 1701     		.2byte	0x117
 884 02a1 C0020000 		.4byte	0x2c0
 885 02a5 18       		.uleb128 0x18
 886 02a6 39010000 		.4byte	.LASF35
 887 02aa 01       		.byte	0x1
 888 02ab 1801     		.2byte	0x118
 889 02ad 7D000000 		.4byte	0x7d
 890 02b1 00       		.byte	0
 891 02b2 18       		.uleb128 0x18
 892 02b3 83000000 		.4byte	.LASF36
 893 02b7 01       		.byte	0x1
 894 02b8 1901     		.2byte	0x119
 895 02ba 91000000 		.4byte	0x91
 896 02be 04       		.byte	0x4
 897 02bf 00       		.byte	0
 898 02c0 19       		.uleb128 0x19
 899 02c1 58010000 		.4byte	.LASF37
 900 02c5 01       		.byte	0x1
 901 02c6 1A01     		.2byte	0x11a
 902 02c8 9C020000 		.4byte	0x29c
 903 02cc 1A       		.uleb128 0x1a
 904 02cd C0020000 		.4byte	0x2c0
 905 02d1 DC020000 		.4byte	0x2dc
 906 02d5 1B       		.uleb128 0x1b
 907 02d6 76000000 		.4byte	0x76
 908 02da 01       		.byte	0x1
 909 02db 00       		.byte	0
 910 02dc 16       		.uleb128 0x16
 911 02dd 73000000 		.4byte	.LASF38
 912 02e1 01       		.byte	0x1
 913 02e2 1C01     		.2byte	0x11c
ARM GAS  /tmp/ccHGsyJi.s 			page 23


 914 02e4 EE020000 		.4byte	0x2ee
 915 02e8 05       		.uleb128 0x5
 916 02e9 03       		.byte	0x3
 917 02ea 00000000 		.4byte	cfg_memset_list.4678
 918 02ee 12       		.uleb128 0x12
 919 02ef CC020000 		.4byte	0x2cc
 920 02f3 1C       		.uleb128 0x1c
 921 02f4 6900     		.ascii	"i\000"
 922 02f6 01       		.byte	0x1
 923 02f7 2201     		.2byte	0x122
 924 02f9 86000000 		.4byte	0x86
 925 02fd 02       		.uleb128 0x2
 926 02fe 91       		.byte	0x91
 927 02ff 77       		.sleb128 -9
 928 0300 10       		.uleb128 0x10
 929 0301 7C000000 		.4byte	.LBB4
 930 0305 3E000000 		.4byte	.LBE4-.LBB4
 931 0309 1C       		.uleb128 0x1c
 932 030a 6D7300   		.ascii	"ms\000"
 933 030d 01       		.byte	0x1
 934 030e 2701     		.2byte	0x127
 935 0310 17030000 		.4byte	0x317
 936 0314 02       		.uleb128 0x2
 937 0315 91       		.byte	0x91
 938 0316 70       		.sleb128 -16
 939 0317 0C       		.uleb128 0xc
 940 0318 04       		.byte	0x4
 941 0319 1D030000 		.4byte	0x31d
 942 031d 12       		.uleb128 0x12
 943 031e C0020000 		.4byte	0x2c0
 944 0322 00       		.byte	0
 945 0323 00       		.byte	0
 946 0324 00       		.byte	0
 947 0325 1A       		.uleb128 0x1a
 948 0326 9C000000 		.4byte	0x9c
 949 032a 35030000 		.4byte	0x335
 950 032e 1B       		.uleb128 0x1b
 951 032f 76000000 		.4byte	0x76
 952 0333 02       		.byte	0x2
 953 0334 00       		.byte	0
 954 0335 12       		.uleb128 0x12
 955 0336 25030000 		.4byte	0x325
 956 033a 1A       		.uleb128 0x1a
 957 033b F6000000 		.4byte	0xf6
 958 033f 4A030000 		.4byte	0x34a
 959 0343 1B       		.uleb128 0x1b
 960 0344 76000000 		.4byte	0x76
 961 0348 07       		.byte	0x7
 962 0349 00       		.byte	0
 963 034a 12       		.uleb128 0x12
 964 034b 3A030000 		.4byte	0x33a
 965 034f 00       		.byte	0
 966              		.section	.debug_abbrev,"",%progbits
 967              	.Ldebug_abbrev0:
 968 0000 01       		.uleb128 0x1
 969 0001 11       		.uleb128 0x11
 970 0002 01       		.byte	0x1
ARM GAS  /tmp/ccHGsyJi.s 			page 24


 971 0003 25       		.uleb128 0x25
 972 0004 0E       		.uleb128 0xe
 973 0005 13       		.uleb128 0x13
 974 0006 0B       		.uleb128 0xb
 975 0007 03       		.uleb128 0x3
 976 0008 0E       		.uleb128 0xe
 977 0009 1B       		.uleb128 0x1b
 978 000a 0E       		.uleb128 0xe
 979 000b 55       		.uleb128 0x55
 980 000c 17       		.uleb128 0x17
 981 000d 11       		.uleb128 0x11
 982 000e 01       		.uleb128 0x1
 983 000f 10       		.uleb128 0x10
 984 0010 17       		.uleb128 0x17
 985 0011 00       		.byte	0
 986 0012 00       		.byte	0
 987 0013 02       		.uleb128 0x2
 988 0014 24       		.uleb128 0x24
 989 0015 00       		.byte	0
 990 0016 0B       		.uleb128 0xb
 991 0017 0B       		.uleb128 0xb
 992 0018 3E       		.uleb128 0x3e
 993 0019 0B       		.uleb128 0xb
 994 001a 03       		.uleb128 0x3
 995 001b 08       		.uleb128 0x8
 996 001c 00       		.byte	0
 997 001d 00       		.byte	0
 998 001e 03       		.uleb128 0x3
 999 001f 16       		.uleb128 0x16
 1000 0020 00       		.byte	0
 1001 0021 03       		.uleb128 0x3
 1002 0022 0E       		.uleb128 0xe
 1003 0023 3A       		.uleb128 0x3a
 1004 0024 0B       		.uleb128 0xb
 1005 0025 3B       		.uleb128 0x3b
 1006 0026 0B       		.uleb128 0xb
 1007 0027 49       		.uleb128 0x49
 1008 0028 13       		.uleb128 0x13
 1009 0029 00       		.byte	0
 1010 002a 00       		.byte	0
 1011 002b 04       		.uleb128 0x4
 1012 002c 24       		.uleb128 0x24
 1013 002d 00       		.byte	0
 1014 002e 0B       		.uleb128 0xb
 1015 002f 0B       		.uleb128 0xb
 1016 0030 3E       		.uleb128 0x3e
 1017 0031 0B       		.uleb128 0xb
 1018 0032 03       		.uleb128 0x3
 1019 0033 0E       		.uleb128 0xe
 1020 0034 00       		.byte	0
 1021 0035 00       		.byte	0
 1022 0036 05       		.uleb128 0x5
 1023 0037 0F       		.uleb128 0xf
 1024 0038 00       		.byte	0
 1025 0039 0B       		.uleb128 0xb
 1026 003a 0B       		.uleb128 0xb
 1027 003b 00       		.byte	0
ARM GAS  /tmp/ccHGsyJi.s 			page 25


 1028 003c 00       		.byte	0
 1029 003d 06       		.uleb128 0x6
 1030 003e 35       		.uleb128 0x35
 1031 003f 00       		.byte	0
 1032 0040 49       		.uleb128 0x49
 1033 0041 13       		.uleb128 0x13
 1034 0042 00       		.byte	0
 1035 0043 00       		.byte	0
 1036 0044 07       		.uleb128 0x7
 1037 0045 13       		.uleb128 0x13
 1038 0046 01       		.byte	0x1
 1039 0047 0B       		.uleb128 0xb
 1040 0048 0B       		.uleb128 0xb
 1041 0049 3A       		.uleb128 0x3a
 1042 004a 0B       		.uleb128 0xb
 1043 004b 3B       		.uleb128 0x3b
 1044 004c 0B       		.uleb128 0xb
 1045 004d 01       		.uleb128 0x1
 1046 004e 13       		.uleb128 0x13
 1047 004f 00       		.byte	0
 1048 0050 00       		.byte	0
 1049 0051 08       		.uleb128 0x8
 1050 0052 0D       		.uleb128 0xd
 1051 0053 00       		.byte	0
 1052 0054 03       		.uleb128 0x3
 1053 0055 0E       		.uleb128 0xe
 1054 0056 3A       		.uleb128 0x3a
 1055 0057 0B       		.uleb128 0xb
 1056 0058 3B       		.uleb128 0x3b
 1057 0059 0B       		.uleb128 0xb
 1058 005a 49       		.uleb128 0x49
 1059 005b 13       		.uleb128 0x13
 1060 005c 38       		.uleb128 0x38
 1061 005d 0B       		.uleb128 0xb
 1062 005e 00       		.byte	0
 1063 005f 00       		.byte	0
 1064 0060 09       		.uleb128 0x9
 1065 0061 2E       		.uleb128 0x2e
 1066 0062 01       		.byte	0x1
 1067 0063 03       		.uleb128 0x3
 1068 0064 0E       		.uleb128 0xe
 1069 0065 3A       		.uleb128 0x3a
 1070 0066 0B       		.uleb128 0xb
 1071 0067 3B       		.uleb128 0x3b
 1072 0068 0B       		.uleb128 0xb
 1073 0069 27       		.uleb128 0x27
 1074 006a 19       		.uleb128 0x19
 1075 006b 11       		.uleb128 0x11
 1076 006c 01       		.uleb128 0x1
 1077 006d 12       		.uleb128 0x12
 1078 006e 06       		.uleb128 0x6
 1079 006f 40       		.uleb128 0x40
 1080 0070 18       		.uleb128 0x18
 1081 0071 9642     		.uleb128 0x2116
 1082 0073 19       		.uleb128 0x19
 1083 0074 01       		.uleb128 0x1
 1084 0075 13       		.uleb128 0x13
ARM GAS  /tmp/ccHGsyJi.s 			page 26


 1085 0076 00       		.byte	0
 1086 0077 00       		.byte	0
 1087 0078 0A       		.uleb128 0xa
 1088 0079 05       		.uleb128 0x5
 1089 007a 00       		.byte	0
 1090 007b 03       		.uleb128 0x3
 1091 007c 08       		.uleb128 0x8
 1092 007d 3A       		.uleb128 0x3a
 1093 007e 0B       		.uleb128 0xb
 1094 007f 3B       		.uleb128 0x3b
 1095 0080 0B       		.uleb128 0xb
 1096 0081 49       		.uleb128 0x49
 1097 0082 13       		.uleb128 0x13
 1098 0083 02       		.uleb128 0x2
 1099 0084 18       		.uleb128 0x18
 1100 0085 00       		.byte	0
 1101 0086 00       		.byte	0
 1102 0087 0B       		.uleb128 0xb
 1103 0088 05       		.uleb128 0x5
 1104 0089 00       		.byte	0
 1105 008a 03       		.uleb128 0x3
 1106 008b 0E       		.uleb128 0xe
 1107 008c 3A       		.uleb128 0x3a
 1108 008d 0B       		.uleb128 0xb
 1109 008e 3B       		.uleb128 0x3b
 1110 008f 0B       		.uleb128 0xb
 1111 0090 49       		.uleb128 0x49
 1112 0091 13       		.uleb128 0x13
 1113 0092 02       		.uleb128 0x2
 1114 0093 18       		.uleb128 0x18
 1115 0094 00       		.byte	0
 1116 0095 00       		.byte	0
 1117 0096 0C       		.uleb128 0xc
 1118 0097 0F       		.uleb128 0xf
 1119 0098 00       		.byte	0
 1120 0099 0B       		.uleb128 0xb
 1121 009a 0B       		.uleb128 0xb
 1122 009b 49       		.uleb128 0x49
 1123 009c 13       		.uleb128 0x13
 1124 009d 00       		.byte	0
 1125 009e 00       		.byte	0
 1126 009f 0D       		.uleb128 0xd
 1127 00a0 26       		.uleb128 0x26
 1128 00a1 00       		.byte	0
 1129 00a2 00       		.byte	0
 1130 00a3 00       		.byte	0
 1131 00a4 0E       		.uleb128 0xe
 1132 00a5 2E       		.uleb128 0x2e
 1133 00a6 01       		.byte	0x1
 1134 00a7 03       		.uleb128 0x3
 1135 00a8 0E       		.uleb128 0xe
 1136 00a9 3A       		.uleb128 0x3a
 1137 00aa 0B       		.uleb128 0xb
 1138 00ab 3B       		.uleb128 0x3b
 1139 00ac 0B       		.uleb128 0xb
 1140 00ad 27       		.uleb128 0x27
 1141 00ae 19       		.uleb128 0x19
ARM GAS  /tmp/ccHGsyJi.s 			page 27


 1142 00af 11       		.uleb128 0x11
 1143 00b0 01       		.uleb128 0x1
 1144 00b1 12       		.uleb128 0x12
 1145 00b2 06       		.uleb128 0x6
 1146 00b3 40       		.uleb128 0x40
 1147 00b4 18       		.uleb128 0x18
 1148 00b5 9742     		.uleb128 0x2117
 1149 00b7 19       		.uleb128 0x19
 1150 00b8 01       		.uleb128 0x1
 1151 00b9 13       		.uleb128 0x13
 1152 00ba 00       		.byte	0
 1153 00bb 00       		.byte	0
 1154 00bc 0F       		.uleb128 0xf
 1155 00bd 34       		.uleb128 0x34
 1156 00be 00       		.byte	0
 1157 00bf 03       		.uleb128 0x3
 1158 00c0 08       		.uleb128 0x8
 1159 00c1 3A       		.uleb128 0x3a
 1160 00c2 0B       		.uleb128 0xb
 1161 00c3 3B       		.uleb128 0x3b
 1162 00c4 0B       		.uleb128 0xb
 1163 00c5 49       		.uleb128 0x49
 1164 00c6 13       		.uleb128 0x13
 1165 00c7 02       		.uleb128 0x2
 1166 00c8 18       		.uleb128 0x18
 1167 00c9 00       		.byte	0
 1168 00ca 00       		.byte	0
 1169 00cb 10       		.uleb128 0x10
 1170 00cc 0B       		.uleb128 0xb
 1171 00cd 01       		.byte	0x1
 1172 00ce 11       		.uleb128 0x11
 1173 00cf 01       		.uleb128 0x1
 1174 00d0 12       		.uleb128 0x12
 1175 00d1 06       		.uleb128 0x6
 1176 00d2 00       		.byte	0
 1177 00d3 00       		.byte	0
 1178 00d4 11       		.uleb128 0x11
 1179 00d5 34       		.uleb128 0x34
 1180 00d6 00       		.byte	0
 1181 00d7 03       		.uleb128 0x3
 1182 00d8 0E       		.uleb128 0xe
 1183 00d9 3A       		.uleb128 0x3a
 1184 00da 0B       		.uleb128 0xb
 1185 00db 3B       		.uleb128 0x3b
 1186 00dc 0B       		.uleb128 0xb
 1187 00dd 49       		.uleb128 0x49
 1188 00de 13       		.uleb128 0x13
 1189 00df 02       		.uleb128 0x2
 1190 00e0 18       		.uleb128 0x18
 1191 00e1 00       		.byte	0
 1192 00e2 00       		.byte	0
 1193 00e3 12       		.uleb128 0x12
 1194 00e4 26       		.uleb128 0x26
 1195 00e5 00       		.byte	0
 1196 00e6 49       		.uleb128 0x49
 1197 00e7 13       		.uleb128 0x13
 1198 00e8 00       		.byte	0
ARM GAS  /tmp/ccHGsyJi.s 			page 28


 1199 00e9 00       		.byte	0
 1200 00ea 13       		.uleb128 0x13
 1201 00eb 2E       		.uleb128 0x2e
 1202 00ec 00       		.byte	0
 1203 00ed 03       		.uleb128 0x3
 1204 00ee 0E       		.uleb128 0xe
 1205 00ef 3A       		.uleb128 0x3a
 1206 00f0 0B       		.uleb128 0xb
 1207 00f1 3B       		.uleb128 0x3b
 1208 00f2 0B       		.uleb128 0xb
 1209 00f3 27       		.uleb128 0x27
 1210 00f4 19       		.uleb128 0x19
 1211 00f5 11       		.uleb128 0x11
 1212 00f6 01       		.uleb128 0x1
 1213 00f7 12       		.uleb128 0x12
 1214 00f8 06       		.uleb128 0x6
 1215 00f9 40       		.uleb128 0x40
 1216 00fa 18       		.uleb128 0x18
 1217 00fb 9642     		.uleb128 0x2116
 1218 00fd 19       		.uleb128 0x19
 1219 00fe 00       		.byte	0
 1220 00ff 00       		.byte	0
 1221 0100 14       		.uleb128 0x14
 1222 0101 2E       		.uleb128 0x2e
 1223 0102 00       		.byte	0
 1224 0103 03       		.uleb128 0x3
 1225 0104 0E       		.uleb128 0xe
 1226 0105 3A       		.uleb128 0x3a
 1227 0106 0B       		.uleb128 0xb
 1228 0107 3B       		.uleb128 0x3b
 1229 0108 0B       		.uleb128 0xb
 1230 0109 27       		.uleb128 0x27
 1231 010a 19       		.uleb128 0x19
 1232 010b 11       		.uleb128 0x11
 1233 010c 01       		.uleb128 0x1
 1234 010d 12       		.uleb128 0x12
 1235 010e 06       		.uleb128 0x6
 1236 010f 40       		.uleb128 0x40
 1237 0110 18       		.uleb128 0x18
 1238 0111 9742     		.uleb128 0x2117
 1239 0113 19       		.uleb128 0x19
 1240 0114 00       		.byte	0
 1241 0115 00       		.byte	0
 1242 0116 15       		.uleb128 0x15
 1243 0117 2E       		.uleb128 0x2e
 1244 0118 01       		.byte	0x1
 1245 0119 3F       		.uleb128 0x3f
 1246 011a 19       		.uleb128 0x19
 1247 011b 03       		.uleb128 0x3
 1248 011c 0E       		.uleb128 0xe
 1249 011d 3A       		.uleb128 0x3a
 1250 011e 0B       		.uleb128 0xb
 1251 011f 3B       		.uleb128 0x3b
 1252 0120 0B       		.uleb128 0xb
 1253 0121 27       		.uleb128 0x27
 1254 0122 19       		.uleb128 0x19
 1255 0123 11       		.uleb128 0x11
ARM GAS  /tmp/ccHGsyJi.s 			page 29


 1256 0124 01       		.uleb128 0x1
 1257 0125 12       		.uleb128 0x12
 1258 0126 06       		.uleb128 0x6
 1259 0127 40       		.uleb128 0x40
 1260 0128 18       		.uleb128 0x18
 1261 0129 9642     		.uleb128 0x2116
 1262 012b 19       		.uleb128 0x19
 1263 012c 01       		.uleb128 0x1
 1264 012d 13       		.uleb128 0x13
 1265 012e 00       		.byte	0
 1266 012f 00       		.byte	0
 1267 0130 16       		.uleb128 0x16
 1268 0131 34       		.uleb128 0x34
 1269 0132 00       		.byte	0
 1270 0133 03       		.uleb128 0x3
 1271 0134 0E       		.uleb128 0xe
 1272 0135 3A       		.uleb128 0x3a
 1273 0136 0B       		.uleb128 0xb
 1274 0137 3B       		.uleb128 0x3b
 1275 0138 05       		.uleb128 0x5
 1276 0139 49       		.uleb128 0x49
 1277 013a 13       		.uleb128 0x13
 1278 013b 02       		.uleb128 0x2
 1279 013c 18       		.uleb128 0x18
 1280 013d 00       		.byte	0
 1281 013e 00       		.byte	0
 1282 013f 17       		.uleb128 0x17
 1283 0140 13       		.uleb128 0x13
 1284 0141 01       		.byte	0x1
 1285 0142 0B       		.uleb128 0xb
 1286 0143 0B       		.uleb128 0xb
 1287 0144 3A       		.uleb128 0x3a
 1288 0145 0B       		.uleb128 0xb
 1289 0146 3B       		.uleb128 0x3b
 1290 0147 05       		.uleb128 0x5
 1291 0148 01       		.uleb128 0x1
 1292 0149 13       		.uleb128 0x13
 1293 014a 00       		.byte	0
 1294 014b 00       		.byte	0
 1295 014c 18       		.uleb128 0x18
 1296 014d 0D       		.uleb128 0xd
 1297 014e 00       		.byte	0
 1298 014f 03       		.uleb128 0x3
 1299 0150 0E       		.uleb128 0xe
 1300 0151 3A       		.uleb128 0x3a
 1301 0152 0B       		.uleb128 0xb
 1302 0153 3B       		.uleb128 0x3b
 1303 0154 05       		.uleb128 0x5
 1304 0155 49       		.uleb128 0x49
 1305 0156 13       		.uleb128 0x13
 1306 0157 38       		.uleb128 0x38
 1307 0158 0B       		.uleb128 0xb
 1308 0159 00       		.byte	0
 1309 015a 00       		.byte	0
 1310 015b 19       		.uleb128 0x19
 1311 015c 16       		.uleb128 0x16
 1312 015d 00       		.byte	0
ARM GAS  /tmp/ccHGsyJi.s 			page 30


 1313 015e 03       		.uleb128 0x3
 1314 015f 0E       		.uleb128 0xe
 1315 0160 3A       		.uleb128 0x3a
 1316 0161 0B       		.uleb128 0xb
 1317 0162 3B       		.uleb128 0x3b
 1318 0163 05       		.uleb128 0x5
 1319 0164 49       		.uleb128 0x49
 1320 0165 13       		.uleb128 0x13
 1321 0166 00       		.byte	0
 1322 0167 00       		.byte	0
 1323 0168 1A       		.uleb128 0x1a
 1324 0169 01       		.uleb128 0x1
 1325 016a 01       		.byte	0x1
 1326 016b 49       		.uleb128 0x49
 1327 016c 13       		.uleb128 0x13
 1328 016d 01       		.uleb128 0x1
 1329 016e 13       		.uleb128 0x13
 1330 016f 00       		.byte	0
 1331 0170 00       		.byte	0
 1332 0171 1B       		.uleb128 0x1b
 1333 0172 21       		.uleb128 0x21
 1334 0173 00       		.byte	0
 1335 0174 49       		.uleb128 0x49
 1336 0175 13       		.uleb128 0x13
 1337 0176 2F       		.uleb128 0x2f
 1338 0177 0B       		.uleb128 0xb
 1339 0178 00       		.byte	0
 1340 0179 00       		.byte	0
 1341 017a 1C       		.uleb128 0x1c
 1342 017b 34       		.uleb128 0x34
 1343 017c 00       		.byte	0
 1344 017d 03       		.uleb128 0x3
 1345 017e 08       		.uleb128 0x8
 1346 017f 3A       		.uleb128 0x3a
 1347 0180 0B       		.uleb128 0xb
 1348 0181 3B       		.uleb128 0x3b
 1349 0182 05       		.uleb128 0x5
 1350 0183 49       		.uleb128 0x49
 1351 0184 13       		.uleb128 0x13
 1352 0185 02       		.uleb128 0x2
 1353 0186 18       		.uleb128 0x18
 1354 0187 00       		.byte	0
 1355 0188 00       		.byte	0
 1356 0189 00       		.byte	0
 1357              		.section	.debug_aranges,"",%progbits
 1358 0000 4C000000 		.4byte	0x4c
 1359 0004 0200     		.2byte	0x2
 1360 0006 00000000 		.4byte	.Ldebug_info0
 1361 000a 04       		.byte	0x4
 1362 000b 00       		.byte	0
 1363 000c 0000     		.2byte	0
 1364 000e 0000     		.2byte	0
 1365 0010 00000000 		.4byte	.LFB0
 1366 0014 1E000000 		.4byte	.LFE0-.LFB0
 1367 0018 00000000 		.4byte	.LFB1
 1368 001c 22000000 		.4byte	.LFE1-.LFB1
 1369 0020 00000000 		.4byte	.LFB2
ARM GAS  /tmp/ccHGsyJi.s 			page 31


 1370 0024 22000000 		.4byte	.LFE2-.LFB2
 1371 0028 00000000 		.4byte	.LFB3
 1372 002c 7E000000 		.4byte	.LFE3-.LFB3
 1373 0030 00000000 		.4byte	.LFB4
 1374 0034 6C000000 		.4byte	.LFE4-.LFB4
 1375 0038 00000000 		.4byte	.LFB5
 1376 003c 08000000 		.4byte	.LFE5-.LFB5
 1377 0040 6C000000 		.4byte	.LFB6
 1378 0044 20010000 		.4byte	.LFE6-.LFB6
 1379 0048 00000000 		.4byte	0
 1380 004c 00000000 		.4byte	0
 1381              		.section	.debug_ranges,"",%progbits
 1382              	.Ldebug_ranges0:
 1383 0000 00000000 		.4byte	.LFB0
 1384 0004 1E000000 		.4byte	.LFE0
 1385 0008 00000000 		.4byte	.LFB1
 1386 000c 22000000 		.4byte	.LFE1
 1387 0010 00000000 		.4byte	.LFB2
 1388 0014 22000000 		.4byte	.LFE2
 1389 0018 00000000 		.4byte	.LFB3
 1390 001c 7E000000 		.4byte	.LFE3
 1391 0020 00000000 		.4byte	.LFB4
 1392 0024 6C000000 		.4byte	.LFE4
 1393 0028 00000000 		.4byte	.LFB5
 1394 002c 08000000 		.4byte	.LFE5
 1395 0030 6C000000 		.4byte	.LFB6
 1396 0034 8C010000 		.4byte	.LFE6
 1397 0038 00000000 		.4byte	0
 1398 003c 00000000 		.4byte	0
 1399              		.section	.debug_line,"",%progbits
 1400              	.Ldebug_line0:
 1401 0000 41010000 		.section	.debug_str,"MS",%progbits,1
 1401      02008500 
 1401      00000201 
 1401      FB0E0D00 
 1401      01010101 
 1402              	.LASF18:
 1403 0000 72656733 		.ascii	"reg32\000"
 1403      3200
 1404              	.LASF11:
 1405 0006 73697A65 		.ascii	"size_t\000"
 1405      5F7400
 1406              	.LASF32:
 1407 000d 416E616C 		.ascii	"AnalogSetDefault\000"
 1407      6F675365 
 1407      74446566 
 1407      61756C74 
 1407      00
 1408              	.LASF20:
 1409 001e 76616C75 		.ascii	"value\000"
 1409      6500
 1410              	.LASF30:
 1411 0024 636F756E 		.ascii	"count\000"
 1411      7400
 1412              	.LASF31:
 1413 002a 436C6F63 		.ascii	"ClockSetup\000"
 1413      6B536574 
ARM GAS  /tmp/ccHGsyJi.s 			page 32


 1413      757000
 1414              	.LASF33:
 1415 0035 63795F63 		.ascii	"cy_cfg_addr_table\000"
 1415      66675F61 
 1415      6464725F 
 1415      7461626C 
 1415      6500
 1416              	.LASF34:
 1417 0047 63795F63 		.ascii	"cy_cfg_data_table\000"
 1417      66675F64 
 1417      6174615F 
 1417      7461626C 
 1417      6500
 1418              	.LASF40:
 1419 0059 63796669 		.ascii	"cyfitter_cfg.c\000"
 1419      74746572 
 1419      5F636667 
 1419      2E6300
 1420              	.LASF15:
 1421 0068 666C6F61 		.ascii	"float\000"
 1421      7400
 1422              	.LASF24:
 1423 006e 64657374 		.ascii	"dest\000"
 1423      00
 1424              	.LASF38:
 1425 0073 6366675F 		.ascii	"cfg_memset_list\000"
 1425      6D656D73 
 1425      65745F6C 
 1425      69737400 
 1426              	.LASF36:
 1427 0083 73697A65 		.ascii	"size\000"
 1427      00
 1428              	.LASF17:
 1429 0088 72656738 		.ascii	"reg8\000"
 1429      00
 1430              	.LASF6:
 1431 008d 6C6F6E67 		.ascii	"long unsigned int\000"
 1431      20756E73 
 1431      69676E65 
 1431      6420696E 
 1431      7400
 1432              	.LASF12:
 1433 009f 75696E74 		.ascii	"uint8\000"
 1433      3800
 1434              	.LASF22:
 1435 00a5 43594D45 		.ascii	"CYMEMZERO\000"
 1435      4D5A4552 
 1435      4F00
 1436              	.LASF2:
 1437 00af 756E7369 		.ascii	"unsigned char\000"
 1437      676E6564 
 1437      20636861 
 1437      7200
 1438              	.LASF16:
 1439 00bd 646F7562 		.ascii	"double\000"
 1439      6C6500
 1440              	.LASF26:
ARM GAS  /tmp/ccHGsyJi.s 			page 33


 1441 00c4 6366675F 		.ascii	"cfg_write_bytes32\000"
 1441      77726974 
 1441      655F6279 
 1441      74657333 
 1441      3200
 1442              	.LASF42:
 1443 00d6 63796669 		.ascii	"cyfitter_cfg\000"
 1443      74746572 
 1443      5F636667 
 1443      00
 1444              	.LASF27:
 1445 00e3 61646472 		.ascii	"addr_table\000"
 1445      5F746162 
 1445      6C6500
 1446              	.LASF13:
 1447 00ee 75696E74 		.ascii	"uint16\000"
 1447      313600
 1448              	.LASF28:
 1449 00f5 64617461 		.ascii	"data_table\000"
 1449      5F746162 
 1449      6C6500
 1450              	.LASF14:
 1451 0100 75696E74 		.ascii	"uint32\000"
 1451      333200
 1452              	.LASF41:
 1453 0107 2F686F6D 		.ascii	"/home/wiki/github.gv1/cysample.linux\000"
 1453      652F7769 
 1453      6B692F67 
 1453      69746875 
 1453      622E6776 
 1454              	.LASF0:
 1455 012c 756E7369 		.ascii	"unsigned int\000"
 1455      676E6564 
 1455      20696E74 
 1455      00
 1456              	.LASF35:
 1457 0139 61646472 		.ascii	"address\000"
 1457      65737300 
 1458              	.LASF8:
 1459 0141 6C6F6E67 		.ascii	"long long unsigned int\000"
 1459      206C6F6E 
 1459      6720756E 
 1459      7369676E 
 1459      65642069 
 1460              	.LASF37:
 1461 0158 6366675F 		.ascii	"cfg_memset_t\000"
 1461      6D656D73 
 1461      65745F74 
 1461      00
 1462              	.LASF29:
 1463 0165 62617365 		.ascii	"baseAddr\000"
 1463      41646472 
 1463      00
 1464              	.LASF9:
 1465 016e 73697A65 		.ascii	"sizetype\000"
 1465      74797065 
 1465      00
ARM GAS  /tmp/ccHGsyJi.s 			page 34


 1466              	.LASF7:
 1467 0177 6C6F6E67 		.ascii	"long long int\000"
 1467      206C6F6E 
 1467      6720696E 
 1467      7400
 1468              	.LASF10:
 1469 0185 63686172 		.ascii	"char\000"
 1469      00
 1470              	.LASF21:
 1471 018a 63795F63 		.ascii	"cy_cfg_addrvalue_t\000"
 1471      66675F61 
 1471      64647276 
 1471      616C7565 
 1471      5F7400
 1472              	.LASF19:
 1473 019d 6F666673 		.ascii	"offset\000"
 1473      657400
 1474              	.LASF3:
 1475 01a4 73686F72 		.ascii	"short int\000"
 1475      7420696E 
 1475      7400
 1476              	.LASF39:
 1477 01ae 474E5520 		.ascii	"GNU C 4.8.4 20140725 (release) [ARM/embedded-4_8-br"
 1477      4320342E 
 1477      382E3420 
 1477      32303134 
 1477      30373235 
 1478 01e1 616E6368 		.ascii	"anch revision 213147] -mcpu=cortex-m0 -mthumb -g -O"
 1478      20726576 
 1478      6973696F 
 1478      6E203231 
 1478      33313437 
 1479 0214 30202D66 		.ascii	"0 -ffunction-sections\000"
 1479      66756E63 
 1479      74696F6E 
 1479      2D736563 
 1479      74696F6E 
 1480              	.LASF5:
 1481 022a 6C6F6E67 		.ascii	"long int\000"
 1481      20696E74 
 1481      00
 1482              	.LASF1:
 1483 0233 7369676E 		.ascii	"signed char\000"
 1483      65642063 
 1483      68617200 
 1484              	.LASF4:
 1485 023f 73686F72 		.ascii	"short unsigned int\000"
 1485      7420756E 
 1485      7369676E 
 1485      65642069 
 1485      6E7400
 1486              	.LASF25:
 1487 0252 4359434F 		.ascii	"CYCONFIGCPYCODE\000"
 1487      4E464947 
 1487      43505943 
 1487      4F444500 
 1488              	.LASF23:
ARM GAS  /tmp/ccHGsyJi.s 			page 35


 1489 0262 4359434F 		.ascii	"CYCONFIGCPY\000"
 1489      4E464947 
 1489      43505900 
 1490              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140725 (release) [ARM/embedded-4_8-br
